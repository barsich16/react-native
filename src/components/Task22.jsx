import React, { useEffect } from 'react';
import { View, Text, TouchableOpacity } from 'react-native';
import { Notifications } from 'react-native-notifications';

export function Task22() {
    useEffect(() => {

        // Реєстрація для отримання пуш-сповіщень
        Notifications.registerRemoteNotifications();

        // Ініціалізація бібліотеки
        Notifications.events().registerRemoteNotificationsRegistered((event) => {
            // Повідомлення про успішну реєстрацію пуш-сповіщень
            console.log('Device token:', event.deviceToken);
        });

        Notifications.events().registerRemoteNotificationsRegistrationFailed((event) => {
            // Повідомлення про помилку реєстрації пуш-сповіщень
            console.error('Failed to register for remote notifications:', event);
        });

        // Встановлення обробника для обробки отриманих пуш-сповіщень
        Notifications.events().registerNotificationReceivedForeground((notification, completion) => {
            // Отримано пуш-сповіщення, коли додаток запущено
            console.log('Received a foreground notification:', notification);

            // Обов'язково викликайте completion, щоб відзначити обробку сповіщення
            completion({ alert: false, sound: true, badge: false });
        });

        Notifications.events().registerNotificationReceivedBackground((notification, completion) => {
            // Отримано пуш-сповіщення, коли додаток у фоновому режимі
            console.log('Received a background notification:', notification);

            // Обов'язково викликайте completion, щоб відзначити обробку сповіщення
            completion({ alert: false, sound: false, badge: false });
        });

        // Повідомлення про завершення компонента (прибрати підписи, якщо компонент розміщується на іншому екрані або відкривається знову)
        return () => {
            Notifications.events().registerRemoteNotificationsRegistered();
            Notifications.events().registerRemoteNotificationsRegistrationFailed();
            Notifications.events().registerNotificationReceivedForeground();
            Notifications.events().registerNotificationReceivedBackground();
        };
    }, []);

    // Функція для відправки локального пуш-сповіщення
    const sendLocalNotification = () => {
        Notifications.postLocalNotification({
            title: "Local notification",
            body: "This notification was generated by the app!",
            extra: "data"
        });
    };

    return (
        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>
            <Text>React Native Push Notifications</Text>
            <TouchableOpacity style={{paddingVertical: 10, backgroundColor: '#243'}} onPress={sendLocalNotification}>
                <Text>Відправити локальне сповіщення</Text>
            </TouchableOpacity>
        </View>
    );
}

export default Task22;